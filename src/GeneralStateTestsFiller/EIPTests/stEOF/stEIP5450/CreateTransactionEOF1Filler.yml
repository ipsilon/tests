---
CreateTransactionEOF1:
  env:
    currentCoinbase: 2adc25665018aa1fe0e6bc666dac8fc2697ff9ba
    currentDifficulty: '0x020000'
    currentGasLimit: '89128960'
    currentBaseFee: '10'
    currentNumber: '1'
    currentTimestamp: '1000'
    previousHash: 5e20a0453cecd065ea59c37ac63e079ee08998b6045136a8ce6635c7912ec0b6

  pre:
    a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: 1000000000
      code: ''
      nonce: 0
      storage: {}

  transaction:
    data:
      # EOF Initcode returning valid EOF code with branches having same stack height
      # Code to deploy: PUSH1(0) RJUMPI(label_true) PUSH1(1) PUSH1(2) RJUMP(exit) label_true: PUSH1(3) PUSH1(4) exit: STOP
      - ':label branches_same_stack_height :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010011030000000000000260005d0007600160025c00046003600400" }'
      # EOF Initcode returning valid EOF code calling functions returning same total outputs
      # Code to deploy:
      #   - Types: [(0,0), (0,1), (0, 1)]
      #   - Code[0]: PUSH1(0) RJUMPI(label_true) label_false: CALLF(1) RJUMP(exit) label_true: CALLF(2) exit: STOP
      #   - Code[1]: ADDRESS STOP
      #   - Code[2]: CODESIZE STOP
      - ':label branches_callf_same_total_outputs :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000c0200030011000200020300000000000002000100010001000160005d0007600160025c0004600360040030003800" }'
      # EOF Initcode returning valid EOF code containing infinite loop
      # Code to deploy:
      #   - Code:
      - ':label infinite_loop :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000903000000000000026000600150505cfff7" }'
      # EOF Initcode returning valid EOF code containing jump table using RJUMPV
      # Code to deploy: ef000101001b0060005e020004000e600160025c000b600360045c00046005600600
      #   - Code: PUSH1(0) RJUMPV(case1,case2) PUSH1(1) PUSH1(2) RJUMP(exit) case1: PUSH1(3) PUSH1(4) RJUMP(exit) case2: PUSH1(5) PUSH1(6) exit: STOP
      - ':label jump_table :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001001b030000000000000260005e020007000e600160025c000b600360045c00046005600600" }'
      # EOF Initcode returning valid EOF code with all instructions passing validation with the right number of input stack items
      # Code to deploy: PUSH1(1) DUP1 ADD STOP
      - ':label validate_input_add :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001800100" }'
      # Code to deploy: PUSH1(1) DUP1 MUL STOP
      - ':label validate_input_mul :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001800200" }'
      # Code to deploy: PUSH1(1) DUP1 SUB STOP
      - ':label validate_input_sub :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001800300" }'
      # Code to deploy: PUSH1(1) DUP1 DIV STOP
      - ':label validate_input_div :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001800400" }'
      # Code to deploy: PUSH1(1) DUP1 SDIV STOP
      - ':label validate_input_sdiv :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001800500" }'
      # Code to deploy: PUSH1(1) DUP1 MOD STOP
      - ':label validate_input_mod :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001800600" }'
      # Code to deploy: PUSH1(1) DUP1 SMOD STOP
      - ':label validate_input_smod :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001800700" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 ADDMOD STOP
      - ':label validate_input_addmod :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100060300000000000003600180800800" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 MULMOD STOP
      - ':label validate_input_mulmod :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100060300000000000003600180800900" }'
      # Code to deploy: PUSH1(1) DUP1 EXP STOP
      - ':label validate_input_exp :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001800a00" }'
      # Code to deploy: PUSH1(1) DUP1 SIGNEXTEND STOP
      - ':label validate_input_signextend :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001800b00" }'
      # Code to deploy: PUSH1(1) DUP1 LT STOP
      - ':label validate_input_lt :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001801000" }'
      # Code to deploy: PUSH1(1) DUP1 GT STOP
      - ':label validate_input_gt :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001801100" }'
      # Code to deploy: PUSH1(1) DUP1 SLT STOP
      - ':label validate_input_slt :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001801200" }'
      # Code to deploy: PUSH1(1) DUP1 SGT STOP
      - ':label validate_input_sgt :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001801300" }'
      # Code to deploy: PUSH1(1) DUP1 EQ STOP
      - ':label validate_input_eq :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001801400" }'
      # Code to deploy: PUSH1(1) ISZERO STOP
      - ':label validate_input_iszero :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010004030000000000000160011500" }'
      # Code to deploy: PUSH1(1) DUP1 AND STOP
      - ':label validate_input_and :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001801600" }'
      # Code to deploy: PUSH1(1) DUP1 OR STOP
      - ':label validate_input_or :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001801700" }'
      # Code to deploy: PUSH1(1) DUP1 XOR STOP
      - ':label validate_input_xor :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001801800" }'
      # Code to deploy: PUSH1(1) NOT STOP
      - ':label validate_input_not :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010004030000000000000160011900" }'
      # Code to deploy: PUSH1(1) DUP1 BYTE STOP
      - ':label validate_input_byte :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001801a00" }'
      # Code to deploy: PUSH1(1) DUP1 SHL STOP
      - ':label validate_input_shl :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001801b00" }'
      # Code to deploy: PUSH1(1) DUP1 SHR STOP
      - ':label validate_input_shr :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001801c00" }'
      # Code to deploy: PUSH1(1) DUP1 SAR STOP
      - ':label validate_input_sar :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001801d00" }'
      # Code to deploy: PUSH1(1) DUP1 SHA3 STOP
      - ':label validate_input_sha3 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001802000" }'
      # Code to deploy: PUSH1(1) BALANCE STOP
      - ':label validate_input_balance :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010004030000000000000160013100" }'
      # Code to deploy: PUSH1(1) CALLDATALOAD STOP
      - ':label validate_input_calldataload :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010004030000000000000160013500" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 CALLDATACOPY STOP
      - ':label validate_input_calldatacopy :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100060300000000000003600180803700" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 CODECOPY STOP
      - ':label validate_input_codecopy :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100060300000000000003600180803900" }'
      # Code to deploy: PUSH1(1) EXTCODESIZE STOP
      - ':label validate_input_extcodesize :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010004030000000000000160013b00" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 EXTCODECOPY STOP
      - ':label validate_input_extcodecopy :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010007030000000000000460018080803c00" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 RETURNDATACOPY STOP
      - ':label validate_input_returndatacopy :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100060300000000000003600180803e00" }'
      # Code to deploy: PUSH1(1) EXTCODEHASH STOP
      - ':label validate_input_extcodehash :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010004030000000000000160013f00" }'
      # Code to deploy: PUSH1(1) BLOCKHASH STOP
      - ':label validate_input_blockhash :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010004030000000000000160014000" }'
      # Code to deploy: PUSH1(1) POP STOP
      - ':label validate_input_pop :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010004030000000000000160015000" }'
      # Code to deploy: PUSH1(1) MLOAD STOP
      - ':label validate_input_mload :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010004030000000000000160015100" }'
      # Code to deploy: PUSH1(1) DUP1 MSTORE STOP
      - ':label validate_input_mstore :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001805200" }'
      # Code to deploy: PUSH1(1) DUP1 MSTORE8 STOP
      - ':label validate_input_mstore8 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001805300" }'
      # Code to deploy: PUSH1(1) SLOAD STOP
      - ':label validate_input_sload :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010004030000000000000160015400" }'
      # Code to deploy: PUSH1(1) DUP1 SSTORE STOP
      - ':label validate_input_sstore :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001805500" }'
      # Code to deploy: PUSH1(1) DUP1 STOP
      - ':label validate_input_dup1 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010004030000000000000260018000" }'
      # Code to deploy: PUSH1(1) DUP1 DUP2 STOP
      - ':label validate_input_dup2 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000036001808100" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP3 STOP
      - ':label validate_input_dup3 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100060300000000000004600180808200" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP4 STOP
      - ':label validate_input_dup4 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010007030000000000000560018080808300" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP5 STOP
      - ':label validate_input_dup5 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000803000000000000066001808080808400" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP6 STOP
      - ':label validate_input_dup6 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100090300000000000007600180808080808500" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP7 STOP
      - ':label validate_input_dup7 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000a030000000000000860018080808080808600" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP8 STOP
      - ':label validate_input_dup8 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000b03000000000000096001808080808080808700" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 STOP
      - ':label validate_input_dup9 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000c030000000000000a600180808080808080808800" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP10 STOP
      - ':label validate_input_dup10 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000d030000000000000b60018080808080808080808900" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP11 STOP
      - ':label validate_input_dup11 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000e030000000000000c6001808080808080808080808a00" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP12 STOP
      - ':label validate_input_dup12 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000f030000000000000d600180808080808080808080808b00" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP13 STOP
      - ':label validate_input_dup13 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010010030000000000000e60018080808080808080808080808c00" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP14 STOP
      - ':label validate_input_dup14 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010011030000000000000f6001808080808080808080808080808d00" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP15 STOP
      - ':label validate_input_dup15 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100120300000000000010600180808080808080808080808080808e00" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP16 STOP
      - ':label validate_input_dup16 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010013030000000000001160018080808080808080808080808080808f00" }'
      # Code to deploy: PUSH1(1) DUP1 SWAP1 STOP
      - ':label validate_input_swap1 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000503000000000000026001809000" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 SWAP2 STOP
      - ':label validate_input_swap2 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100060300000000000003600180809100" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 SWAP3 STOP
      - ':label validate_input_swap3 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010007030000000000000460018080809200" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 SWAP4 STOP
      - ':label validate_input_swap4 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000803000000000000056001808080809300" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 SWAP5 STOP
      - ':label validate_input_swap5 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100090300000000000006600180808080809400" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 SWAP6 STOP
      - ':label validate_input_swap6 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000a030000000000000760018080808080809500" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 SWAP7 STOP
      - ':label validate_input_swap7 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000b03000000000000086001808080808080809600" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 SWAP8 STOP
      - ':label validate_input_swap8 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000c0300000000000009600180808080808080809700" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 SWAP9 STOP
      - ':label validate_input_swap9 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000d030000000000000a60018080808080808080809800" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 SWAP10 STOP
      - ':label validate_input_swap10 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000e030000000000000b6001808080808080808080809900" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 SWAP11 STOP
      - ':label validate_input_swap11 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000f030000000000000c600180808080808080808080809a00" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 SWAP12 STOP
      - ':label validate_input_swap12 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010010030000000000000d60018080808080808080808080809b00" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 SWAP13 STOP
      - ':label validate_input_swap13 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010011030000000000000e6001808080808080808080808080809c00" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 SWAP14 STOP
      - ':label validate_input_swap14 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010012030000000000000f600180808080808080808080808080809d00" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 SWAP15 STOP
      - ':label validate_input_swap15 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010013030000000000001060018080808080808080808080808080809e00" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 SWAP16 STOP
      - ':label validate_input_swap16 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001001403000000000000116001808080808080808080808080808080809f00" }'
      # Code to deploy: PUSH1(1) DUP1 LOG0 STOP
      - ':label validate_input_log0 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100050300000000000002600180a000" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 LOG1 STOP
      - ':label validate_input_log1 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010006030000000000000360018080a100" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 LOG2 STOP
      - ':label validate_input_log2 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000703000000000000046001808080a200" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 LOG3 STOP
      - ':label validate_input_log3 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100080300000000000005600180808080a300" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 LOG4 STOP
      - ':label validate_input_log4 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010009030000000000000660018080808080a400" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 CREATE STOP
      - ':label validate_input_create :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010006030000000000000360018080f000" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 CALL STOP
      - ':label validate_input_call :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000a03000000000000076001808080808080f100" }'
      # Code to deploy: PUSH1(1) DUP1 RETURN
      - ':label validate_input_return :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100040300000000000002600180f3" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DELEGATECALL STOP
      - ':label validate_input_delegatecall :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010009030000000000000660018080808080f400" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 CREATE2 STOP
      - ':label validate_input_create2 :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000703000000000000046001808080f500" }'
      # Code to deploy: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 STATICCALL STOP
      - ':label validate_input_staticcall :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010009030000000000000660018080808080fa00" }'
      # Code to deploy: PUSH1(1) DUP1 REVERT
      - ':label validate_input_revert :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100040300000000000002600180fd" }'
      # EOF Initcode returning valid EOF code passing validation with right number of input stack parameters for functions (CALLF)
      #   Types: [(0,0), (1, 0), (2, 0), (127, 0)]
      #   Code[0]: CALLF(0) STOP
      #   Code[1]: PUSH1(0) CALLF(1) STOP
      #   Code[2]: PUSH1(0) PUSH1(0) CALLF(2) STOP
      #   Code[3]: PUSH1(0) DUP1(x126 times)  CALLF(3) STOP
      - ':label callf_inputs :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100100200040004000600080084030000000000000001000002020000047f0000feb00000006000b000010060006000b00002006000808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080b0000300" }'
      # EOF Initcode returning valid EOF code containing terminating instruction at the end
      # Code to deploy: PUSH1(0) POP  STOP
      - ':label terminating_instruction_stop :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010004030000000000000160005000" }'
      # Code to deploy: PUSH1(0) POP  RETF
      - ':label terminating_instruction_retf :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100040300000000000001600050b1" }'
      # Code to deploy: PUSH1(0) POP  PUSH1(0) PUSH1(1) DUP1 DUP1 RETURN
      - ':label terminating_instruction_return :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000a0300000000000004600050600060018080f3" }'
      # Code to deploy: PUSH1(0) POP  PUSH1(0) PUSH1(1) DUP1 DUP1 DUP1 REVERT
      - ':label terminating_instruction_revert :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000b030000000000000560005060006001808080fd" }'
      # Code to deploy: PUSH1(0) POP  INVALID
      - ':label terminating_instruction_invalid :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100040300000000000001600050fe" }'
      # Loop ending with unconditional RJUMP
      #     - Code to deploy: start: RJUMP(start)
      - ':label loop_ending_with_unconditional_rjump_a :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000303000000000000005cfffd" }'
      # Loop ending with unconditional RJUMP
      #     - Code to deploy: PUSH1(10) start: PUSH1(1) SWAP1 SUB DUP1 RJUMPI(end) STOP end: RJUMP(start)
      - ':label loop_ending_with_unconditional_rjump_b :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000e0300000000000002600a60019003805d0001005cfff4" }'
      # Functions ending with RETF
      #  - Code to deploy:
      #      - code[0] (Inputs: 0, Outputs: 0): PUSH1(0) CALLF(1) STOP
      #      - code[1] (Inputs: 1, Outputs: 1): RETF
      #      - code[2] (Inputs: 0, Outputs: 2): PUSH1(0) PUSH2(0x0000) RETF
      - ':label functions_ending_with_retf :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000c020003000600010006030000000000000101010001000200026000b0000100b16000610000b1" }'
      # Stack not required to be clean on terminating instruction
      # Code to deploy: PUSH1(0) PUSH1(0) PUSH1(0)  STOP
      - ':label stack_not_clean_before_stop :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010007030000000000000360006000600000" }'
      # Code to deploy: PUSH1(0) PUSH1(0) PUSH1(0)  PUSH1(0) PUSH1(1) DUP1 DUP1 DUP1 DUP1 RETURN
      - ':label stack_not_clean_before_return :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef0001010004020001000f03000000000000096000600060006000600180808080f3" }'
      # Code to deploy: PUSH1(0) PUSH1(0) PUSH1(0)  PUSH1(0) PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 REVERT
      - ':label stack_not_clean_before_revert :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef00010100040200010010030000000000000a600060006000600060018080808080fd" }'
      # Code to deploy: PUSH1(0) PUSH1(0) PUSH1(0)  INVALID
      - ':label stack_not_clean_before_invalid :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000402000100070300000000000003600060006000fe" }'
      # Code to deploy:
      #    Types: [(0,0), (1,1), (0,2)
      #    Code[0]: CALLF(1) STOP
      #    Code[1]: PUSH1(0) DUP1*126 RETF
      #    Code[2]: PUSH1(0) PUSH2(0x0000) RETF
      - ':label retf_512_output :yul-eof object "c" { code { datacopy(0, dataoffset("r"), datasize("r")) return(0, datasize("r")) } data "r" hex"ef000101000802000200040081030000000000007f007f007fb00001006000808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080b1" }'
    gasLimit:
      - 15000000
    gasPrice: 10
    nonce: 0
    secretKey: 45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8
    to: ''
    value:
      - 0

  expect:
      - indexes:
         data: ':label branches_same_stack_height'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010011030000000000000260005d0007600160025c00046003600400'
            storage: {}
      - indexes:
         data: ':label branches_callf_same_total_outputs'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000c0200030011000200020300000000000002000100010001000160005d0007600160025c0004600360040030003800'
            storage: {}
      - indexes:
         data: ':label infinite_loop'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000903000000000000026000600150505cfff7'
            storage: {}
      - indexes:
         data: ':label jump_table'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001001b030000000000000260005e020007000e600160025c000b600360045c00046005600600'
            storage: {}
      - indexes:
         data: ':label validate_input_add'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001800100'
            storage: {}
      - indexes:
         data: ':label validate_input_mul'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001800200'
            storage: {}
      - indexes:
         data: ':label validate_input_sub'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001800300'
            storage: {}
      - indexes:
         data: ':label validate_input_div'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001800400'
            storage: {}
      - indexes:
         data: ':label validate_input_sdiv'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001800500'
            storage: {}
      - indexes:
         data: ':label validate_input_mod'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001800600'
            storage: {}
      - indexes:
         data: ':label validate_input_smod'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001800700'
            storage: {}
      - indexes:
         data: ':label validate_input_addmod'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100060300000000000003600180800800'
            storage: {}
      - indexes:
         data: ':label validate_input_mulmod'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100060300000000000003600180800900'
            storage: {}
      - indexes:
         data: ':label validate_input_exp'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001800a00'
            storage: {}
      - indexes:
         data: ':label validate_input_signextend'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001800b00'
            storage: {}
      - indexes:
         data: ':label validate_input_lt'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001801000'
            storage: {}
      - indexes:
         data: ':label validate_input_gt'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001801100'
            storage: {}
      - indexes:
         data: ':label validate_input_slt'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001801200'
            storage: {}
      - indexes:
         data: ':label validate_input_sgt'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001801300'
            storage: {}
      - indexes:
         data: ':label validate_input_eq'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001801400'
            storage: {}
      - indexes:
         data: ':label validate_input_iszero'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010004030000000000000160011500'
            storage: {}
      - indexes:
         data: ':label validate_input_and'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001801600'
            storage: {}
      - indexes:
         data: ':label validate_input_or'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001801700'
            storage: {}
      - indexes:
         data: ':label validate_input_xor'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001801800'
            storage: {}
      - indexes:
         data: ':label validate_input_not'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010004030000000000000160011900'
            storage: {}
      - indexes:
         data: ':label validate_input_byte'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001801a00'
            storage: {}
      - indexes:
         data: ':label validate_input_shl'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001801b00'
            storage: {}
      - indexes:
         data: ':label validate_input_shr'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001801c00'
            storage: {}
      - indexes:
         data: ':label validate_input_sar'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001801d00'
            storage: {}
      - indexes:
         data: ':label validate_input_sha3'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001802000'
            storage: {}
      - indexes:
         data: ':label validate_input_balance'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010004030000000000000160013100'
            storage: {}
      - indexes:
         data: ':label validate_input_calldataload'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010004030000000000000160013500'
            storage: {}
      - indexes:
         data: ':label validate_input_calldatacopy'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100060300000000000003600180803700'
            storage: {}
      - indexes:
         data: ':label validate_input_codecopy'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100060300000000000003600180803900'
            storage: {}
      - indexes:
         data: ':label validate_input_extcodesize'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010004030000000000000160013b00'
            storage: {}
      - indexes:
         data: ':label validate_input_extcodecopy'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010007030000000000000460018080803c00'
            storage: {}
      - indexes:
         data: ':label validate_input_returndatacopy'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100060300000000000003600180803e00'
            storage: {}
      - indexes:
         data: ':label validate_input_extcodehash'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010004030000000000000160013f00'
            storage: {}
      - indexes:
         data: ':label validate_input_blockhash'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010004030000000000000160014000'
            storage: {}
      - indexes:
         data: ':label validate_input_pop'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010004030000000000000160015000'
            storage: {}
      - indexes:
         data: ':label validate_input_mload'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010004030000000000000160015100'
            storage: {}
      - indexes:
         data: ':label validate_input_mstore'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001805200'
            storage: {}
      - indexes:
         data: ':label validate_input_mstore8'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001805300'
            storage: {}
      - indexes:
         data: ':label validate_input_sload'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010004030000000000000160015400'
            storage: {}
      - indexes:
         data: ':label validate_input_sstore'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001805500'
            storage: {}
      - indexes:
         data: ':label validate_input_dup1'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010004030000000000000260018000'
            storage: {}
      - indexes:
         data: ':label validate_input_dup2'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000036001808100'
            storage: {}
      - indexes:
         data: ':label validate_input_dup3'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100060300000000000004600180808200'
            storage: {}
      - indexes:
         data: ':label validate_input_dup4'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010007030000000000000560018080808300'
            storage: {}
      - indexes:
         data: ':label validate_input_dup5'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000803000000000000066001808080808400'
            storage: {}
      - indexes:
         data: ':label validate_input_dup6'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100090300000000000007600180808080808500'
            storage: {}
      - indexes:
         data: ':label validate_input_dup7'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000a030000000000000860018080808080808600'
            storage: {}
      - indexes:
         data: ':label validate_input_dup8'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000b03000000000000096001808080808080808700'
            storage: {}
      - indexes:
         data: ':label validate_input_dup9'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000c030000000000000a600180808080808080808800'
            storage: {}
      - indexes:
         data: ':label validate_input_dup10'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000d030000000000000b60018080808080808080808900'
            storage: {}
      - indexes:
         data: ':label validate_input_dup11'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000e030000000000000c6001808080808080808080808a00'
            storage: {}
      - indexes:
         data: ':label validate_input_dup12'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000f030000000000000d600180808080808080808080808b00'
            storage: {}
      - indexes:
         data: ':label validate_input_dup13'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010010030000000000000e60018080808080808080808080808c00'
            storage: {}
      - indexes:
         data: ':label validate_input_dup14'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010011030000000000000f6001808080808080808080808080808d00'
            storage: {}
      - indexes:
         data: ':label validate_input_dup15'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100120300000000000010600180808080808080808080808080808e00'
            storage: {}
      - indexes:
         data: ':label validate_input_dup16'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010013030000000000001160018080808080808080808080808080808f00'
            storage: {}
      - indexes:
         data: ':label validate_input_swap1'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000503000000000000026001809000'
            storage: {}
      - indexes:
         data: ':label validate_input_swap2'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100060300000000000003600180809100'
            storage: {}
      - indexes:
         data: ':label validate_input_swap3'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010007030000000000000460018080809200'
            storage: {}
      - indexes:
         data: ':label validate_input_swap4'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000803000000000000056001808080809300'
            storage: {}
      - indexes:
         data: ':label validate_input_swap5'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100090300000000000006600180808080809400'
            storage: {}
      - indexes:
         data: ':label validate_input_swap6'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000a030000000000000760018080808080809500'
            storage: {}
      - indexes:
         data: ':label validate_input_swap7'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000b03000000000000086001808080808080809600'
            storage: {}
      - indexes:
         data: ':label validate_input_swap8'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000c0300000000000009600180808080808080809700'
            storage: {}
      - indexes:
         data: ':label validate_input_swap9'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000d030000000000000a60018080808080808080809800'
            storage: {}
      - indexes:
         data: ':label validate_input_swap10'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000e030000000000000b6001808080808080808080809900'
            storage: {}
      - indexes:
         data: ':label validate_input_swap11'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000f030000000000000c600180808080808080808080809a00'
            storage: {}
      - indexes:
         data: ':label validate_input_swap12'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010010030000000000000d60018080808080808080808080809b00'
            storage: {}
      - indexes:
         data: ':label validate_input_swap13'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010011030000000000000e6001808080808080808080808080809c00'
            storage: {}
      - indexes:
         data: ':label validate_input_swap14'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010012030000000000000f600180808080808080808080808080809d00'
            storage: {}
      - indexes:
         data: ':label validate_input_swap15'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010013030000000000001060018080808080808080808080808080809e00'
            storage: {}
      - indexes:
         data: ':label validate_input_swap16'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001001403000000000000116001808080808080808080808080808080809f00'
            storage: {}
      - indexes:
         data: ':label validate_input_log0'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100050300000000000002600180a000'
            storage: {}
      - indexes:
         data: ':label validate_input_log1'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010006030000000000000360018080a100'
            storage: {}
      - indexes:
         data: ':label validate_input_log2'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000703000000000000046001808080a200'
            storage: {}
      - indexes:
         data: ':label validate_input_log3'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100080300000000000005600180808080a300'
            storage: {}
      - indexes:
         data: ':label validate_input_log4'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010009030000000000000660018080808080a400'
            storage: {}
      - indexes:
         data: ':label validate_input_create'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010006030000000000000360018080f000'
            storage: {}
      - indexes:
         data: ':label validate_input_call'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000a03000000000000076001808080808080f100'
            storage: {}
      - indexes:
         data: ':label validate_input_return'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100040300000000000002600180f3'
            storage: {}
      - indexes:
         data: ':label validate_input_delegatecall'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010009030000000000000660018080808080f400'
            storage: {}
      - indexes:
         data: ':label validate_input_create2'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000703000000000000046001808080f500'
            storage: {}
      - indexes:
         data: ':label validate_input_staticcall'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010009030000000000000660018080808080fa00'
            storage: {}
      - indexes:
         data: ':label validate_input_revert'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100040300000000000002600180fd'
            storage: {}
      - indexes:
         data: ':label callf_inputs'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100100200040004000600080084030000000000000001000002020000047f0000feb00000006000b000010060006000b00002006000808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080b0000300'
            storage: {}
      - indexes:
         data: ':label terminating_instruction_stop'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010004030000000000000160005000'
            storage: {}
      - indexes:
         data: ':label terminating_instruction_retf'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100040300000000000001600050b1'
            storage: {}
      - indexes:
         data: ':label terminating_instruction_return'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000a0300000000000004600050600060018080f3'
            storage: {}
      - indexes:
         data: ':label terminating_instruction_revert'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000b030000000000000560005060006001808080fd'
            storage: {}
      - indexes:
         data: ':label terminating_instruction_invalid'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100040300000000000001600050fe'
            storage: {}
      - indexes:
         data: ':label loop_ending_with_unconditional_rjump_a'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000303000000000000005cfffd'
            storage: {}
      - indexes:
         data: ':label loop_ending_with_unconditional_rjump_b'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000e0300000000000002600a60019003805d0001005cfff4'
            storage: {}
      - indexes:
         data: ':label functions_ending_with_retf'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000c020003000600010006030000000000000101010001000200026000b0000100b16000610000b1'
            storage: {}
      - indexes:
         data: ':label stack_not_clean_before_stop'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010007030000000000000360006000600000'
            storage: {}
      - indexes:
         data: ':label stack_not_clean_before_return'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef0001010004020001000f03000000000000096000600060006000600180808080f3'
            storage: {}
      - indexes:
         data: ':label stack_not_clean_before_revert'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef00010100040200010010030000000000000a600060006000600060018080808080fd'
            storage: {}
      - indexes:
         data: ':label stack_not_clean_before_invalid'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000402000100070300000000000003600060006000fe'
            storage: {}
      - indexes:
         data: ':label retf_512_output'
        network:
          - 'Shanghai'
        result:
         a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
            nonce: 1
         6295eE1B4F6dD65047762F924Ecd367c17eaBf8f:
            nonce: 1
            code: '0xef000101000802000200040081030000000000007f007f007fb00001006000808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080b1'
            storage: {}
